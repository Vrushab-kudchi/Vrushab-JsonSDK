import t from"isomorphic-unfetch";function e(){return e=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var s=arguments[e];for(var r in s)({}).hasOwnProperty.call(s,r)&&(t[r]=s[r])}return t},e.apply(null,arguments)}class s{constructor(t){this.apiKey=void 0,this.baseUrl=void 0,this.apiKey=t.apiKey,this.baseUrl=t.baseUrl||"https://jsonplaceholder.typicode.com"}Request(s,r){const o=`${this.baseUrl}/${s}`,n=e({"Content-Type":"application/json"},this.apiKey&&{"x-api-key":this.apiKey}),a=e({},r,{headers:n});return t(o,a).then(t=>{if(!t.ok)throw new Error(t.statusText);return t.json()})}}class r extends s{}var o;o=r,[class extends s{async getPostById(t){return this.Request(`/posts/${t}`)}async getPosts(){return this.Request("/posts")}async createPost(t){return this.Request("/posts",{method:"POST",body:JSON.stringify(t)})}}].forEach(t=>{Object.getOwnPropertyNames(t.prototype).forEach(e=>{Object.defineProperty(o.prototype,e,Object.getOwnPropertyDescriptor(t.prototype,e)||Object.create(null))})});export{r as default};
